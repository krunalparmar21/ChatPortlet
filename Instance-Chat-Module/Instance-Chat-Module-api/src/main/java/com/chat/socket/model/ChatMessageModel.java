/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.chat.socket.model;

import com.liferay.portal.kernel.bean.AutoEscape;
import com.liferay.portal.kernel.model.BaseModel;
import com.liferay.portal.kernel.model.ShardedModel;

import java.util.Date;

import org.osgi.annotation.versioning.ProviderType;

/**
 * The base model interface for the ChatMessage service. Represents a row in the &quot;DLF_ChatMessage&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This interface and its corresponding implementation <code>com.chat.socket.model.impl.ChatMessageModelImpl</code> exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in <code>com.chat.socket.model.impl.ChatMessageImpl</code>.
 * </p>
 *
 * @author Brian Wing Shun Chan
 * @see ChatMessage
 * @generated
 */
@ProviderType
public interface ChatMessageModel extends BaseModel<ChatMessage>, ShardedModel {

	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this interface directly. All methods that expect a chat message model instance should use the {@link ChatMessage} interface instead.
	 */

	/**
	 * Returns the primary key of this chat message.
	 *
	 * @return the primary key of this chat message
	 */
	public long getPrimaryKey();

	/**
	 * Sets the primary key of this chat message.
	 *
	 * @param primaryKey the primary key of this chat message
	 */
	public void setPrimaryKey(long primaryKey);

	/**
	 * Returns the uuid of this chat message.
	 *
	 * @return the uuid of this chat message
	 */
	@AutoEscape
	public String getUuid();

	/**
	 * Sets the uuid of this chat message.
	 *
	 * @param uuid the uuid of this chat message
	 */
	public void setUuid(String uuid);

	/**
	 * Returns the ID of this chat message.
	 *
	 * @return the ID of this chat message
	 */
	public long getId();

	/**
	 * Sets the ID of this chat message.
	 *
	 * @param id the ID of this chat message
	 */
	public void setId(long id);

	/**
	 * Returns the group ID of this chat message.
	 *
	 * @return the group ID of this chat message
	 */
	public long getGroupId();

	/**
	 * Sets the group ID of this chat message.
	 *
	 * @param groupId the group ID of this chat message
	 */
	public void setGroupId(long groupId);

	/**
	 * Returns the company ID of this chat message.
	 *
	 * @return the company ID of this chat message
	 */
	@Override
	public long getCompanyId();

	/**
	 * Sets the company ID of this chat message.
	 *
	 * @param companyId the company ID of this chat message
	 */
	@Override
	public void setCompanyId(long companyId);

	/**
	 * Returns the from user of this chat message.
	 *
	 * @return the from user of this chat message
	 */
	public long getFromUser();

	/**
	 * Sets the from user of this chat message.
	 *
	 * @param fromUser the from user of this chat message
	 */
	public void setFromUser(long fromUser);

	/**
	 * Returns the to user of this chat message.
	 *
	 * @return the to user of this chat message
	 */
	public long getToUser();

	/**
	 * Sets the to user of this chat message.
	 *
	 * @param toUser the to user of this chat message
	 */
	public void setToUser(long toUser);

	/**
	 * Returns the sent date of this chat message.
	 *
	 * @return the sent date of this chat message
	 */
	public Date getSentDate();

	/**
	 * Sets the sent date of this chat message.
	 *
	 * @param sentDate the sent date of this chat message
	 */
	public void setSentDate(Date sentDate);

	/**
	 * Returns the read date of this chat message.
	 *
	 * @return the read date of this chat message
	 */
	public Date getReadDate();

	/**
	 * Sets the read date of this chat message.
	 *
	 * @param readDate the read date of this chat message
	 */
	public void setReadDate(Date readDate);

	/**
	 * Returns the message of this chat message.
	 *
	 * @return the message of this chat message
	 */
	@AutoEscape
	public String getMessage();

	/**
	 * Sets the message of this chat message.
	 *
	 * @param message the message of this chat message
	 */
	public void setMessage(String message);

	/**
	 * Returns the readed of this chat message.
	 *
	 * @return the readed of this chat message
	 */
	public boolean getReaded();

	/**
	 * Returns <code>true</code> if this chat message is readed.
	 *
	 * @return <code>true</code> if this chat message is readed; <code>false</code> otherwise
	 */
	public boolean isReaded();

	/**
	 * Sets whether this chat message is readed.
	 *
	 * @param readed the readed of this chat message
	 */
	public void setReaded(boolean readed);

	/**
	 * Returns the deleted of this chat message.
	 *
	 * @return the deleted of this chat message
	 */
	public boolean getDeleted();

	/**
	 * Returns <code>true</code> if this chat message is deleted.
	 *
	 * @return <code>true</code> if this chat message is deleted; <code>false</code> otherwise
	 */
	public boolean isDeleted();

	/**
	 * Sets whether this chat message is deleted.
	 *
	 * @param deleted the deleted of this chat message
	 */
	public void setDeleted(boolean deleted);

	/**
	 * Returns the file name of this chat message.
	 *
	 * @return the file name of this chat message
	 */
	@AutoEscape
	public String getFileName();

	/**
	 * Sets the file name of this chat message.
	 *
	 * @param fileName the file name of this chat message
	 */
	public void setFileName(String fileName);

	/**
	 * Returns the file ID of this chat message.
	 *
	 * @return the file ID of this chat message
	 */
	public long getFileId();

	/**
	 * Sets the file ID of this chat message.
	 *
	 * @param fileId the file ID of this chat message
	 */
	public void setFileId(long fileId);

	@Override
	public ChatMessage cloneWithOriginalValues();

	public default String toXmlString() {
		return null;
	}

}